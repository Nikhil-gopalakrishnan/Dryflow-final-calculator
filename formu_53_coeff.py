import numpy as np

p0 = 2.971e+00
p1 = 4.879e-03
p2 = -1.270e+01
p3 = 1.296e-01
p4 = 2.495e+01
p5 = -5.704e-01
p6 = -2.871e+00
p7 = -6.713e-02
p8 = 3.815e+00
p9 = -1.584e-01
p10 = -6.269e+01
p11 = 2.464e+00
p12 = 3.917e-02
p13 = -1.665e-03
p14 = -7.182e-03
p15 = 1.179e-03
p16 = -6.187e-01
p17 = 1.824e-02
p18 = -7.695e+00
p19 = 3.652e-02
p20 = 2.695e+01
p21 = -4.510e-01
p22 = -4.795e+01
p23 = 1.963e+00
p24 = 2.054e+01
p25 = -2.246e-01
p26 = 6.207e+01
p27 = 1.222e+00
p28 = 1.985e+00
p29 = -9.004e+00
p30 = -2.444e-01
p31 = 6.841e-03
p32 = 1.122e+00
p33 = -1.494e-02
p34 = 3.600e-01
p35 = -5.648e-02
p36 = -5.770e-03
p37 = -3.636e-03
p38 = 5.571e-01
p39 = 2.125e-03
p40 = -1.609e+00
p41 = 2.792e-02
p42 = -4.762e-01
p43 = 2.534e-02
p44 = 1.025e+00
p45 = -5.246e-02
p46 = 3.535e+00
p47 = -1.034e-01
p48 = -2.673e-03
p49 = 1.531e-04
p50 = -8.354e-03
p51 = -2.628e-04
p52 = 5.602e-02
p53 = -9.384e-04


def measured2x2(P, v, d, sigmaf):
    s, r = sigmaf, np.sqrt(sigmaf)
    g = p0 + p1 * d + p2 * r + p3 * r * d + p4 * s + p5 * s * d + \
        p6 / v + p7 * d / v + p8 * r / v + p9 * r * d / v + p10 * s / v + p11 * s * d / v + \
        p12 * v + p13 * d * v + p14 * r * v + p15 * r * d * v + p16 * s * v + p17 * s * d * v + \
        p18 / P + p19 * d / P + p20 * r / P + p21 * r * d / P + p22 * s / P + p23 * s * d / P + \
        p24 / (P * v) + p25 * d / (P * v) + p26 * r / (P * v) + p27 * r * d / (P * v) + p28 * s / (
                    P * v) + p29 * s * d / (P * v) + \
        p30 * v / P + p31 * d * v / P + p32 * r * v / P + p33 * r * d * v / P + p34 * s * v / P + p35 * s * d * v / P + \
        p36 * P + p37 * d * P + p38 * r * P + p39 * r * d * P + p40 * s * P + p41 * s * d * P + \
        p42 * P / v + p43 * d * P / v + p44 * r * P / v + p45 * r * d * P / v + p46 * s * P / v + p47 * s * d * P / v + \
        p48 * v * P + p49 * d * v * P + p50 * r * v * P + p51 * r * d * v * P + p52 * s * v * P + p53 * s * d * v * P
    return round(g, 2)


